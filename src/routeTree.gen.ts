/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SearchImport } from './routes/search'
import { Route as ProfileImport } from './routes/profile'
import { Route as LoginImport } from './routes/login'
import { Route as LayoutImport } from './routes/_layout'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as PokemonIndexImport } from './routes/pokemon/index'
import { Route as PokemonIdImport } from './routes/pokemon/$id'
import { Route as LayoutAboutImport } from './routes/_layout/about'
import { Route as AuthenticatedPostsImport } from './routes/_authenticated/posts'
import { Route as AuthenticatedDashboardImport } from './routes/_authenticated/dashboard'
import { Route as AuthenticatedDashboardIndexImport } from './routes/_authenticated/dashboard.index'
import { Route as AuthenticatedBlogsIndexImport } from './routes/_authenticated/blogs/index'
import { Route as AuthenticatedPostIdImport } from './routes/_authenticated/post/$id'
import { Route as AuthenticatedBlogsIdImport } from './routes/_authenticated/blogs/$id'
import { Route as AuthenticatedDashboardUsersIndexImport } from './routes/_authenticated/dashboard.users.index'
import { Route as AuthenticatedDashboardUsersIdImport } from './routes/_authenticated/dashboard.users.$id'

// Create/Update Routes

const SearchRoute = SearchImport.update({
  path: '/search',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PokemonIndexRoute = PokemonIndexImport.update({
  path: '/pokemon/',
  getParentRoute: () => rootRoute,
} as any)

const PokemonIdRoute = PokemonIdImport.update({
  path: '/pokemon/$id',
  getParentRoute: () => rootRoute,
} as any)

const LayoutAboutRoute = LayoutAboutImport.update({
  path: '/about',
  getParentRoute: () => LayoutRoute,
} as any)

const AuthenticatedPostsRoute = AuthenticatedPostsImport.update({
  path: '/posts',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedDashboardRoute = AuthenticatedDashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedDashboardIndexRoute =
  AuthenticatedDashboardIndexImport.update({
    path: '/',
    getParentRoute: () => AuthenticatedDashboardRoute,
  } as any)

const AuthenticatedBlogsIndexRoute = AuthenticatedBlogsIndexImport.update({
  path: '/blogs/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedPostIdRoute = AuthenticatedPostIdImport.update({
  path: '/post/$id',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedBlogsIdRoute = AuthenticatedBlogsIdImport.update({
  path: '/blogs/$id',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedDashboardUsersIndexRoute =
  AuthenticatedDashboardUsersIndexImport.update({
    path: '/users/',
    getParentRoute: () => AuthenticatedDashboardRoute,
  } as any)

const AuthenticatedDashboardUsersIdRoute =
  AuthenticatedDashboardUsersIdImport.update({
    path: '/users/$id',
    getParentRoute: () => AuthenticatedDashboardRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/search': {
      preLoaderRoute: typeof SearchImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/dashboard': {
      preLoaderRoute: typeof AuthenticatedDashboardImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/posts': {
      preLoaderRoute: typeof AuthenticatedPostsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_layout/about': {
      preLoaderRoute: typeof LayoutAboutImport
      parentRoute: typeof LayoutImport
    }
    '/pokemon/$id': {
      preLoaderRoute: typeof PokemonIdImport
      parentRoute: typeof rootRoute
    }
    '/pokemon/': {
      preLoaderRoute: typeof PokemonIndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/blogs/$id': {
      preLoaderRoute: typeof AuthenticatedBlogsIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/post/$id': {
      preLoaderRoute: typeof AuthenticatedPostIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/blogs/': {
      preLoaderRoute: typeof AuthenticatedBlogsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/dashboard/': {
      preLoaderRoute: typeof AuthenticatedDashboardIndexImport
      parentRoute: typeof AuthenticatedDashboardImport
    }
    '/_authenticated/dashboard/users/$id': {
      preLoaderRoute: typeof AuthenticatedDashboardUsersIdImport
      parentRoute: typeof AuthenticatedDashboardImport
    }
    '/_authenticated/dashboard/users/': {
      preLoaderRoute: typeof AuthenticatedDashboardUsersIndexImport
      parentRoute: typeof AuthenticatedDashboardImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AuthenticatedRoute.addChildren([
    AuthenticatedDashboardRoute.addChildren([
      AuthenticatedDashboardIndexRoute,
      AuthenticatedDashboardUsersIdRoute,
      AuthenticatedDashboardUsersIndexRoute,
    ]),
    AuthenticatedPostsRoute,
    AuthenticatedBlogsIdRoute,
    AuthenticatedPostIdRoute,
    AuthenticatedBlogsIndexRoute,
  ]),
  LayoutRoute.addChildren([LayoutAboutRoute]),
  LoginRoute,
  ProfileRoute,
  SearchRoute,
  PokemonIdRoute,
  PokemonIndexRoute,
])

/* prettier-ignore-end */
